{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Mcard from '../Mcard/Mcard';\nimport './cards.css';\nexport default function Cards({\n  movies = []\n}) {\n  _s();\n  const [originalMovies, setOriginalMovies] = useState([]);\n  useEffect(() => {\n    if (movies.length === 0) {\n      // Fetch popular movies only if no search results are available\n      axios.get(\"https://api.themoviedb.org/3/movie/popular\", {\n        params: {\n          api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n          language: 'en-US',\n          page: 1\n        }\n      }).then(res => {\n        setOriginalMovies(res.data.results);\n      }).catch(err => {\n        console.error(\"Error fetching the movies:\", err);\n      });\n    }\n  }, [movies]);\n  const displayedMovies = movies.length > 0 ? movies : originalMovies;\n\n  // return (\n  //   <div className=\"cards-container\">\n  //     {displayedMovies.map(movie => (\n  //       <Mcard key={movie.id} movie={movie} />\n  //     ))}\n  //   </div>\n  // );\n}\n_s(Cards, \"8mGH4fR5rn4REyKLabszX9Pu374=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","axios","Mcard","Cards","movies","_s","originalMovies","setOriginalMovies","length","get","params","api_key","language","page","then","res","data","results","catch","err","console","error","displayedMovies","_c","$RefreshReg$"],"sources":["/home/ahmed/ITI/React/Movies_React_Project/movies/src/components/cards/cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Mcard from '../Mcard/Mcard';\nimport './cards.css';\n\nexport default function Cards({ movies = [] }) {\n  const [originalMovies, setOriginalMovies] = useState([]);\n\n  useEffect(() => {\n    if (movies.length === 0) { // Fetch popular movies only if no search results are available\n      axios\n        .get(\"https://api.themoviedb.org/3/movie/popular\", {\n          params: {\n            api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n            language: 'en-US',\n            page: 1,\n          },\n        })\n        .then((res) => {\n          setOriginalMovies(res.data.results);\n        })\n        .catch((err) => {\n          console.error(\"Error fetching the movies:\", err);\n        });\n    }\n  }, [movies]);\n\n  const displayedMovies = movies.length > 0 ? movies : originalMovies;\n\n  // return (\n  //   <div className=\"cards-container\">\n  //     {displayedMovies.map(movie => (\n  //       <Mcard key={movie.id} movie={movie} />\n  //     ))}\n  //   </div>\n  // );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,aAAa;AAEpB,eAAe,SAASC,KAAKA,CAAC;EAAEC,MAAM,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,CAACI,MAAM,KAAK,CAAC,EAAE;MAAE;MACzBP,KAAK,CACFQ,GAAG,CAAC,4CAA4C,EAAE;QACjDC,MAAM,EAAE;UACNC,OAAO,EAAE,kCAAkC;UAC3CC,QAAQ,EAAE,OAAO;UACjBC,IAAI,EAAE;QACR;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;QACbR,iBAAiB,CAACQ,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;MACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAEZ,MAAMkB,eAAe,GAAGlB,MAAM,CAACI,MAAM,GAAG,CAAC,GAAGJ,MAAM,GAAGE,cAAc;;EAEnE;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACD,EAAA,CA/BuBF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}