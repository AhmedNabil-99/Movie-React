{"ast":null,"code":"var _jsxFileName = \"/media/ahmed/B626A91C26A8DE9D/ITI/nabil react/React-Project/src/pages/single.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingleMovie() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n        language: 'en-US'\n      }\n    }).then(res => setMovie(res.data)).catch(err => console.error('Error fetching movie details:', err));\n  }, [id]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 1403,\n        height: 1339,\n        position: 'relative',\n        background: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 1371,\n          height: 441,\n          left: 16,\n          top: 863,\n          position: 'absolute'\n        },\n        src: `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`,\n        alt: \"Backdrop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 1297,\n          height: 0,\n          left: 53,\n          top: 758,\n          position: 'absolute',\n          border: '1px #CFCFCF solid'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 838,\n          left: 497,\n          top: 308,\n          position: 'absolute',\n          color: 'black',\n          fontSize: 24,\n          fontFamily: 'Inter',\n          fontWeight: '400',\n          wordWrap: 'break-word'\n        },\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 1403,\n        height: 55,\n        background: '#FFE353'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'black',\n        fontSize: 15,\n        fontFamily: 'Inter',\n        fontWeight: '700',\n        wordWrap: 'break-word'\n      },\n      children: \"Movie App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SingleMovie, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c = SingleMovie;\nvar _c;\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","SingleMovie","_s","id","movie","setMovie","get","params","api_key","language","then","res","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","position","background","left","top","src","backdrop_path","alt","border","color","fontSize","fontFamily","fontWeight","wordWrap","overview","_c","$RefreshReg$"],"sources":["/media/ahmed/B626A91C26A8DE9D/ITI/nabil react/React-Project/src/pages/single.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nexport default function SingleMovie() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n        language: 'en-US',\n      },\n    })\n    .then(res => setMovie(res.data))\n    .catch(err => console.error('Error fetching movie details:', err));\n  }, [id]);\n\n  if (!movie) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div style={{ width: 1403, height: 1339, position: 'relative', background: 'white' }}>\n        <img style={{ width: 1371, height: 441, left: 16, top: 863, position: 'absolute' }} src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`} alt=\"Backdrop\" />\n        <div style={{ width: 1297, height: 0, left: 53, top: 758, position: 'absolute', border: '1px #CFCFCF solid' }}></div>\n        <div style={{ width: 838, left: 497, top: 308, position: 'absolute', color: 'black', fontSize: 24, fontFamily: 'Inter', fontWeight: '400', wordWrap: 'break-word' }}>{movie.overview}</div>\n        {/* <img style={{ width: 412, height: 618, left: 53, top: 95, position: 'absolute', borderRadius: 27 }} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"Poster\" /> */}\n        {/* Add other movie details here */}\n      </div>\n      <div style={{ width: 1403, height: 55, background: '#FFE353' }} />\n      <div style={{ color: 'black', fontSize: 15, fontFamily: 'Inter', fontWeight: '700', wordWrap: 'break-word' }}>Movie App</div>\n      {/* Add other page components as needed */}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}