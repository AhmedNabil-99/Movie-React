{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/ITI/React/React Project/React-Project/src/components/cards/cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Mcard from '../Mcard/Mcard';\nimport Pagination from '../pagination/pagination';\nimport './cards.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards({\n  movies,\n  totalPages,\n  setTotalPages\n}) {\n  _s();\n  const [originalMovies, setOriginalMovies] = useState([]);\n  useEffect(() => {\n    if (movies.length === 0) {\n      axios.get(\"https://api.themoviedb.org/3/movie/popular\", {\n        params: {\n          api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n          language: 'en-US'\n          // page: currentPage,\n        }\n      }).then(res => {\n        setOriginalMovies(res.data.results);\n        setTotalPages(res.data.total_pages);\n      }).catch(err => {\n        console.error(\"Error fetching the movies:\", err);\n      });\n    }\n  }, [movies, setTotalPages]);\n  const displayedMovies = movies.length > 0 ? movies : originalMovies;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: displayedMovies.map(movie => /*#__PURE__*/_jsxDEV(Mcard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      currentPage: currentPage,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Cards, \"8mGH4fR5rn4REyKLabszX9Pu374=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","axios","Mcard","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","movies","totalPages","setTotalPages","_s","originalMovies","setOriginalMovies","length","get","params","api_key","language","then","res","data","results","total_pages","catch","err","console","error","displayedMovies","children","className","map","movie","id","fileName","_jsxFileName","lineNumber","columnNumber","currentPage","onPageChange","setCurrentPage","_c","$RefreshReg$"],"sources":["/home/ahmed/ITI/React/React Project/React-Project/src/components/cards/cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Mcard from '../Mcard/Mcard';\nimport Pagination from '../pagination/pagination';\nimport './cards.css';\n\nexport default function Cards({ movies, totalPages, setTotalPages }) {\n  const [originalMovies, setOriginalMovies] = useState([]);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      axios\n        .get(\"https://api.themoviedb.org/3/movie/popular\", {\n          params: {\n            api_key: 'd05c4cd1b7f5c2480d55c1a2931702d5',\n            language: 'en-US',\n            // page: currentPage,\n          },\n        })\n        .then((res) => {\n          setOriginalMovies(res.data.results);\n          setTotalPages(res.data.total_pages); \n        })\n        .catch((err) => {\n          console.error(\"Error fetching the movies:\", err);\n        });\n    }\n  }, [movies, setTotalPages]);\n\n  const displayedMovies = movies.length > 0 ? movies : originalMovies;\n\n  return (\n    <>\n      <div className=\"cards-container\">\n        {displayedMovies.map(movie => (\n          <Mcard key={movie.id} movie={movie} />\n        ))}\n      </div>\n      <Pagination \n        totalPages={totalPages} \n        currentPage={currentPage} \n        onPageChange={setCurrentPage} \n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,eAAe,SAASC,KAAKA,CAAC;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;MACvBd,KAAK,CACFe,GAAG,CAAC,4CAA4C,EAAE;QACjDC,MAAM,EAAE;UACNC,OAAO,EAAE,kCAAkC;UAC3CC,QAAQ,EAAE;UACV;QACF;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;QACbP,iBAAiB,CAACO,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;QACnCZ,aAAa,CAACU,GAAG,CAACC,IAAI,CAACE,WAAW,CAAC;MACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACjB,MAAM,EAAEE,aAAa,CAAC,CAAC;EAE3B,MAAMkB,eAAe,GAAGpB,MAAM,CAACM,MAAM,GAAG,CAAC,GAAGN,MAAM,GAAGI,cAAc;EAEnE,oBACER,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC7BD,eAAe,CAACG,GAAG,CAACC,KAAK,iBACxB5B,OAAA,CAACH,KAAK;QAAgB+B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA,CAACF,UAAU;MACTO,UAAU,EAAEA,UAAW;MACvB6B,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEC;IAAe;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA,eACF,CAAC;AAEP;AAAC1B,EAAA,CAvCuBJ,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}